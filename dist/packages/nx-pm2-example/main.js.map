{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;ACAA;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,kEAA8B;AAC9B,0DAA6B;AAE7B,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEnE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3B,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport express from 'express';\r\nimport * as path from 'path';\r\n\r\nconst app = express();\r\n\r\napp.use('/assets', express.static(path.join(__dirname, 'assets')));\r\n\r\napp.get('/api', (req, res) => {\r\n  res.send({ message: 'Welcome to nx-pm2-example!' });\r\n});\r\n\r\nconst port = process.env.PORT || 3333;\r\nconst server = app.listen(port, () => {\r\n  console.log(`Listening at http://localhost:${port}/api`);\r\n});\r\nserver.on('error', console.error);\r\n"],"names":[],"sourceRoot":""}